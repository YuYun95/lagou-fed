// javascript弱类型产生的问题

// 1、因为弱类型关系，运行时才能发现类型问题

// const obj = {}
// obj.foo() // 执行是才报错
// setTimeout(() => {
//   obj.foo()
// },1000) // 如果时间长，测试阶段无法测出问题

// 2、类型不明确，造成函数功能改变
// =====================================================
// function sum(a, b) {
//   return a + b
// }
//
// console.log(sum(100, 100))
// console.log(sum(100, '100'))

// =====================================================
// 3、对对象索引器错误的用法
const obj = {}
obj[true] = 100
console.log(obj['true'])

